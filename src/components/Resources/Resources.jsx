/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Button, Link } from '@mui/material';
import XOutImage from 'src/assets/images/Resources_X_out.png';
import DashIconMuiImage from 'src/assets/images/Resources_dash_icon_MUI.png';
import IconDashReactImage from 'src/assets/images/Resources_icon_dash_react.png';
import IconDashExportImage from 'src/assets/images/Resources_icon_dash_export.png';
import IconDashZoomImage from 'src/assets/images/Resources_icon_dash_zoom_1.png';
import IconDashZoom1Image from 'src/assets/images/Resources_icon_dash_zoom.png';
import { styled } from '@mui/material/styles';
import useResources from 'src/components/Resources/useResources';

const Resources1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `40px 0px`,
  boxSizing: `border-box`,
  height: '100%',
});

const Banner = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `40px 0px 0px 0px`,
});

const Row = styled('div')({
  border: `1px solid rgba(138, 136, 255, 1)`,
  boxSizing: `border-box`,
  borderRadius: `6px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `10px 20px`,
  flexGrow: `1`,
  margin: `0px`,
});

const ThanksTxt = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const Thanks = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(39, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `20px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  textTransform: `none`,
  margin: `0px`,
});

const YourAccountIsNowSetu = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(39, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `400`,
  fontSize: `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `none`,
  margin: `0px 0px 0px 22px`,
});

const XOut = styled('img')({
  height: `16px`,
  width: `16px`,
  margin: `0px 0px 0px 30px`,
});

const Thanks1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Top = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `18px 0px 0px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  width: `290px`,
  margin: `0px`,
});

const Avatar1 = styled('div')({
  backgroundColor: `rgba(205, 204, 255, 1)`,
  borderRadius: `360px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: `150px`,
  width: `150px`,
  margin: `0px`,
});

const A = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(39, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `300`,
  fontSize: `98px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  textTransform: `none`,
  margin: `0px`,
});

const Name = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `14px 0px 0px 0px`,
});

const Andrew = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(58, 58, 58, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `22px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  textTransform: `none`,
  margin: `0px`,
});

const ButtonText = styled(Button)({
  margin: `14px 0px 0px 0px`,
});

const ResourceBoxes = styled('div')({
  backgroundColor: `rgba(253, 253, 253, 1)`,
  borderRadius: `6px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px 0px 0px 30px`,
});

const Title = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px 30px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px 0px 0px 50px`,
});

const IconAndTitle = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Resources2 = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(58, 58, 58, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `20px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  width: `271px`,
  margin: `0px`,
});

const Row1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `10px 10px 10px 0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const Resource = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  boxShadow: `0px 9px 18px rgba(0, 0, 0, 0.06)`,
  border: `1px solid rgba(206, 206, 206, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `16px 0px`,
  alignSelf: `stretch`,
  margin: `0px`,
  backgroundColor: data.isHovered?.resource
    ? 'linear-gradient(90deg, rgba(233, 242, 255, 0.9) -0.00000875349733583611%, rgba(237, 237, 255, 0.9) 95.79438761196948%)'
    : 'unset',
  cursor: `pointer`,
}));

const Top1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px 22px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const IconAndTitle1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const DashIconMui = styled('img')({
  height: `70px`,
  width: `70px`,
  margin: `0px`,
});

const Description = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 30px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const OverviewVideo = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(58, 58, 58, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  margin: `0px`,
});

const Resource1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  boxShadow: `0px 9px 18px rgba(0, 0, 0, 0.06)`,
  border: `1px solid rgba(206, 206, 206, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `16px 0px`,
  alignSelf: `stretch`,
  margin: `20px 0px 0px 0px`,
  backgroundColor: data.isHovered?.resource_1
    ? 'linear-gradient(90deg, rgba(233, 242, 255, 0.9) -0.00000875349733583611%, rgba(237, 237, 255, 0.9) 95.79438761196948%)'
    : 'unset',
  cursor: `pointer`,
}));

const Top2 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px 22px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const IconAndTitle2 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const IconDashReact = styled('img')({
  height: `70px`,
  width: `70px`,
  margin: `0px`,
});

const Description1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 30px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const QuickStartDoc = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(58, 58, 58, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  margin: `0px`,
});

const Resource2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  boxShadow: `0px 9px 18px rgba(0, 0, 0, 0.06)`,
  border: `1px solid rgba(206, 206, 206, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `16px 0px`,
  alignSelf: `stretch`,
  margin: `20px 0px 0px 0px`,
  backgroundColor: data.isHovered?.resource_2
    ? 'linear-gradient(90deg, rgba(233, 242, 255, 0.9) -0.00000875349733583611%, rgba(237, 237, 255, 0.9) 95.79438761196948%)'
    : 'unset',
  cursor: `pointer`,
}));

const Top3 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px 22px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const IconAndTitle3 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const IconDashExport = styled('img')({
  height: `70px`,
  width: `70px`,
  margin: `0px`,
});

const Description2 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 30px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const GetTheFigmaPlugin = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(58, 58, 58, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  margin: `0px`,
});

const Resource3 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  boxShadow: `0px 9px 18px rgba(0, 0, 0, 0.06)`,
  border: `1px solid rgba(206, 206, 206, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `16px 0px`,
  alignSelf: `stretch`,
  margin: `20px 0px 0px 0px`,
  backgroundColor: data.isHovered?.resource_3
    ? 'linear-gradient(90deg, rgba(233, 242, 255, 0.9) -0.00000875349733583611%, rgba(237, 237, 255, 0.9) 95.79438761196948%)'
    : 'unset',
  cursor: `pointer`,
}));

const Top4 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px 22px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const IconAndTitle4 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const IconDashZoom = styled('img')({
  height: `70px`,
  width: `70px`,
  margin: `0px`,
});

const Description3 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 30px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const JoinUsOnDiscord = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(58, 58, 58, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  margin: `0px`,
});

const Resource4 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundColor: `rgba(253, 253, 253, 1)`,
  boxShadow: `0px 9px 18px rgba(0, 0, 0, 0.06)`,
  border: `1px solid rgba(206, 206, 206, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `16px 0px`,
  alignSelf: `stretch`,
  margin: `20px 0px 0px 0px`,
  backgroundImage: data.isHovered?.resource_4
    ? 'linear-gradient(90deg, rgba(233, 242, 255, 0.9) -0.00000875349733583611%, rgba(237, 237, 255, 0.9) 95.79438761196948%)'
    : 'unset',
  cursor: `pointer`,
}));

const Top5 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px 22px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const IconAndTitle5 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const IconDashZoom1 = styled('img')({
  height: `70px`,
  width: `70px`,
  margin: `0px`,
});

const Description4 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 30px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const ScheduleDemoOnboardi = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(58, 58, 58, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  margin: `0px`,
});

const Links = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `10px 0px 0px 0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  height: `577px`,
  margin: `0px 0px 0px 50px`,
});

const IconAndTitle6 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: `0px 0px 0px 20px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Links1 = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(58, 58, 58, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `20px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  width: `271px`,
  margin: `0px`,
});

const Link1 = styled(Link)(({ theme }) => ({
  color: theme.palette['Primary']['Main'],
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `400`,
  fontSize: `14px`,
  letterSpacing: `0px`,
  textTransform: `none`,
  margin: `14px 0px 0px 0px`,
}));

const Link2 = styled(Link)(({ theme }) => ({
  color: theme.palette['Primary']['Main'],
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `400`,
  fontSize: `14px`,
  letterSpacing: `0px`,
  textTransform: `none`,
  margin: `14px 0px 0px 0px`,
}));

const Link3 = styled(Link)(({ theme }) => ({
  color: theme.palette['Primary']['Main'],
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `400`,
  fontSize: `14px`,
  letterSpacing: `0px`,
  textTransform: `none`,
  margin: `14px 0px 0px 0px`,
}));

const Link4 = styled(Link)(({ theme }) => ({
  color: theme.palette['Primary']['Main'],
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `400`,
  fontSize: `14px`,
  letterSpacing: `0px`,
  textTransform: `none`,
  margin: `14px 0px 0px 0px`,
}));

const Link5 = styled(Link)(({ theme }) => ({
  color: theme.palette['Primary']['Main'],
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `400`,
  fontSize: `14px`,
  letterSpacing: `0px`,
  textTransform: `none`,
  margin: `14px 0px 0px 0px`,
}));

const Resources3 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  height: `211px`,
  margin: `40px 0px 0px 0px`,
});

function Resources(props) {
  const { data, fns } = useResources(props);

  return (
    <Resources1>
      {false && (
        <Banner>
          <Row>
            <ThanksTxt>
              <Thanks>{`Thanks!`}</Thanks>
              <YourAccountIsNowSetu>
                {`Your Account is now setup with Next.js as the export type & Typescript as the file type. `}
              </YourAccountIsNowSetu>
            </ThanksTxt>
            <XOut src={XOutImage} loading="lazy" alt={'X out'} />
          </Row>
        </Banner>
      )}
      <Thanks1>
        <Top>
          <Avatar1>
            <A>{props.userInfo.firstName.charAt(0).toUpperCase()}</A>
          </Avatar1>
          <Name>
            <Andrew>{props.userInfo.firstName}</Andrew>
          </Name>
          <ButtonText
            variant="text"
            size="medium"
            color="primary"
            onClick={() => fns.handleLinkClick('/neo/account/user')}
          >
            {' '}
            Edit Profile{' '}
          </ButtonText>
        </Top>
        <ResourceBoxes>
          {false && (
            <Title>
              <IconAndTitle>
                <Resources2>{`Resources`}</Resources2>
              </IconAndTitle>
            </Title>
          )}
          <Row1>
            <Resource
              onClick={() =>
                fns.handleLinkClick(
                  'https://www.youtube.com/watch?v=FAr23TFwGB0'
                )
              }
              onMouseOver={(e) => fns.handleOnHoverEnter(e, 'resource')}
              onMouseLeave={(e) => fns.handleOnHoverLeave(e, 'resource')}
              data={data}
            >
              <Top1>
                <IconAndTitle1>
                  <DashIconMui
                    src={DashIconMuiImage}
                    loading="lazy"
                    alt={'dash_icon_MUI'}
                  />
                </IconAndTitle1>
                <Description>
                  <OverviewVideo>{`Overview Video`}</OverviewVideo>
                </Description>
              </Top1>
            </Resource>
            <Resource1
              onClick={() =>
                fns.handleLinkClick('https://docs.quest.ai/react/')
              }
              onMouseOver={(e) => fns.handleOnHoverEnter(e, 'resource_1')}
              onMouseLeave={(e) => fns.handleOnHoverLeave(e, 'resource_1')}
              data={data}
            >
              <Top2>
                <IconAndTitle2>
                  <IconDashReact
                    src={IconDashReactImage}
                    loading="lazy"
                    alt={'icon_dash_react'}
                  />
                </IconAndTitle2>
                <Description1>
                  <QuickStartDoc>{`Quick Start Doc`}</QuickStartDoc>
                </Description1>
              </Top2>
            </Resource1>
            <Resource2
              onClick={() =>
                fns.handleLinkClick(
                  'https://www.figma.com/community/plugin/862039267149408972/Figma-to-React'
                )
              }
              onMouseOver={(e) => fns.handleOnHoverEnter(e, 'resource_2')}
              onMouseLeave={(e) => fns.handleOnHoverLeave(e, 'resource_2')}
              data={data}
            >
              <Top3>
                <IconAndTitle3>
                  <IconDashExport
                    src={IconDashExportImage}
                    loading="lazy"
                    alt={'icon_dash_export'}
                  />
                </IconAndTitle3>
                <Description2>
                  <GetTheFigmaPlugin>
                    {`Get the Figma Plugin`}
                  </GetTheFigmaPlugin>
                </Description2>
              </Top3>
            </Resource2>
            <Resource3
              onClick={() =>
                fns.handleLinkClick('https://discord.gg/TdmUqXBqEQ')
              }
              onMouseOver={(e) => fns.handleOnHoverEnter(e, 'resource_3')}
              onMouseLeave={(e) => fns.handleOnHoverLeave(e, 'resource_3')}
              data={data}
            >
              <Top4>
                <IconAndTitle4>
                  <IconDashZoom
                    src={IconDashZoomImage}
                    loading="lazy"
                    alt={'icon_dash_zoom'}
                  />
                </IconAndTitle4>
                <Description3>
                  <JoinUsOnDiscord>{`Join Us on Discord`}</JoinUsOnDiscord>
                </Description3>
              </Top4>
            </Resource3>
            <Resource4
              onClick={() =>
                fns.handleLinkClick(
                  'https://meetings.hubspot.com/quest/customer-onboarding-call?embed=true'
                )
              }
              onMouseOver={(e) => fns.handleOnHoverEnter(e, 'resource_4')}
              onMouseLeave={(e) => fns.handleOnHoverLeave(e, 'resource')}
              data={data}
            >
              <Top5>
                <IconAndTitle5>
                  <IconDashZoom1
                    src={IconDashZoom1Image}
                    loading="lazy"
                    alt={'icon_dash_zoom'}
                  />
                </IconAndTitle5>
                <Description4>
                  <ScheduleDemoOnboardi>
                    {`Schedule Demo/Onboarding`}
                  </ScheduleDemoOnboardi>
                </Description4>
              </Top5>
            </Resource4>
          </Row1>
          <Links>
            <IconAndTitle6>
              <Links1>{`Links`}</Links1>
              <Link1 href="#" underline="hover">
                Quest Docs
              </Link1>
              <Link2 href="#" underline="hover">
                Duplicate the Free MUI Kit
              </Link2>
              <Link3 href="#" underline="hover">
                Get the Full MUI Kit
              </Link3>
              <Link4 href="#" underline="hover">
                Component Samples & Templates
              </Link4>
              <Link5 href="#" underline="hover">
                Revisit Quick Start Guide
              </Link5>
            </IconAndTitle6>
          </Links>
        </ResourceBoxes>
      </Thanks1>
      <Resources3></Resources3>
    </Resources1>
  );
}

export default Resources;
