/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import {
  Button,
  FormControl,
  RadioGroup,
  Radio,
  FormControlLabel,
} from '@mui/material';
import QuestDashboardLogoImage from 'src/assets/images/Questions_Quest_dashboard_logo.png';
import { styled } from '@mui/material/styles';

const Questions1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: '100%',
});

const Avatar1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px 0px 0px 34px`,
});

const Avatar2 = styled('div')({
  backgroundColor: `rgba(205, 204, 255, 1)`,
  borderRadius: `360px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: `150px`,
  width: `150px`,
  margin: `0px`,
});

const A = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(39, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `300`,
  fontSize: `98px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  textTransform: `none`,
  margin: `0px`,
});

const Name = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `14px 0px 0px 0px`,
});

const Andrew = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(58, 58, 58, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `22px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  textTransform: `none`,
  margin: `0px`,
});

const ButtonText = styled(Button)({
  margin: `14px 0px 0px 0px`,
});

const WelcomeQuiz = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `30px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const Top = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TopSec = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Top1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Welcome = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const WelcomeTo = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(39, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `26px`,
  letterSpacing: `-0.26px`,
  textDecoration: `none`,
  textTransform: `none`,
  width: `359px`,
  margin: `0px`,
});

const QuestDashboardLogo = styled('img')({
  height: `56px`,
  width: `226px`,
  objectFit: `contain`,
  margin: `10px 0px 0px 0px`,
});

const HelpUsCustomizeYourE = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(39, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `400`,
  fontSize: `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `none`,
  width: `333px`,
  margin: `58px 0px 0px 0px`,
});

const Divider = styled('div')({
  backgroundColor: `rgba(218, 218, 218, 1)`,
  alignSelf: `stretch`,
  height: `1px`,
  margin: `28px 0px 0px 0px`,
});

const Q1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `6px 0px`,
  boxSizing: `border-box`,
  margin: `22px 0px 0px 0px`,
});

const WhatAreYouBuilding = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(39, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  width: `333px`,
  margin: `0px`,
});

const OptionsAndReason = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `18px 0px 0px 0px`,
});

const Options1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const FormControlLabel1 = styled(FormControlLabel)({
  margin: `0px`,
});

const FormControlLabel2 = styled(FormControlLabel)({
  margin: `4px 0px 0px 0px`,
});

const FormControlLabel3 = styled(FormControlLabel)({
  margin: `4px 0px 0px 0px`,
});

const Botom = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 0px 0px 10px`,
  boxSizing: `border-box`,
  width: `1056px`,
  margin: `18px 0px 0px 0px`,
});

const SubmitCancel = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `4px 10px 0px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ButtonContained = styled(Button)({
  margin: `0px`,
});

const Q2 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `6px 0px`,
  boxSizing: `border-box`,
  margin: `22px 0px 0px 0px`,
});

const WhatIsYourPreferredL = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(39, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  width: `333px`,
  margin: `0px`,
});

const OptionsAndReason1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `18px 0px 0px 0px`,
});

const Options2 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const FormControlLabel4 = styled(FormControlLabel)({
  margin: `0px`,
});

const FormControlLabel5 = styled(FormControlLabel)({
  margin: `4px 0px 0px 0px`,
});

const Botom1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 0px 0px 10px`,
  boxSizing: `border-box`,
  width: `1056px`,
  margin: `18px 0px 0px 0px`,
});

const SubmitCancel1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `4px 10px 0px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ButtonContained1 = styled(Button)({
  margin: `0px`,
});

const Q3 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `6px 0px`,
  boxSizing: `border-box`,
  margin: `22px 0px 0px 0px`,
});

const WhoAreYou = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(39, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  width: `333px`,
  margin: `0px`,
});

const OptionsAndReason2 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `18px 0px 0px 0px`,
});

const Options3 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const FormControlLabel6 = styled(FormControlLabel)({
  margin: `0px`,
});

const FormControlLabel7 = styled(FormControlLabel)({
  margin: `4px 0px 0px 0px`,
});

const FormControlLabel8 = styled(FormControlLabel)({
  margin: `4px 0px 0px 0px`,
});

const FormControlLabel9 = styled(FormControlLabel)({
  margin: `4px 0px 0px 0px`,
});

const Botom2 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 0px 0px 10px`,
  boxSizing: `border-box`,
  width: `1056px`,
  margin: `18px 0px 0px 0px`,
});

const SubmitCancel2 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `4px 10px 0px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ButtonContained2 = styled(Button)({
  margin: `0px`,
});

function Questions(props) {
  return (
    <Questions1>
      {false && (
        <Avatar1>
          <Avatar2>
            <A>{`A`}</A>
          </Avatar2>
          <Name>
            <Andrew>{`Andrew`}</Andrew>
          </Name>
          {false && (
            <ButtonText variant="text" size="medium" color="primary">
              {' '}
              Edit Profile{' '}
            </ButtonText>
          )}
        </Avatar1>
      )}
      <WelcomeQuiz>
        <Top>
          <TopSec>
            <Top1>
              <Welcome>
                <WelcomeTo>{`Welcome to`}</WelcomeTo>
                <QuestDashboardLogo
                  src={QuestDashboardLogoImage}
                  loading="lazy"
                  alt={'Quest dashboard logo'}
                />
              </Welcome>
              <HelpUsCustomizeYourE>
                {`Help us customize your experience and get you started in the right direction.`}
              </HelpUsCustomizeYourE>
            </Top1>
            <Divider></Divider>
          </TopSec>
        </Top>
        <Q1>
          <WhatAreYouBuilding>{`What are you building?`}</WhatAreYouBuilding>
          <OptionsAndReason>
            <Options1>
              <FormControl>
                <RadioGroup
                  id={what_are_you_building}
                  name={what_are_you_building}
                  aria-label={what_are_you_building}
                  onChange={(e) =>
                    props.onRadioChange(e, {
                      question: 'what_are_you_building',
                      value: e.target.value,
                    })
                  }
                >
                  <FormControlLabel1
                    control={
                      <Radio
                        value={'react_app'}
                        color="primary"
                        size="medium"
                      />
                    }
                    label={'A new ReactJS App'}
                  />
                  <FormControlLabel2
                    control={
                      <Radio
                        value={'react_component'}
                        color="primary"
                        size="medium"
                      />
                    }
                    label={'A ReactJS component for an existing App'}
                  />
                  <FormControlLabel3
                    control={
                      <Radio value={'next_app'} color="primary" size="medium" />
                    }
                    label={'A website using NextJS'}
                  />
                </RadioGroup>
              </FormControl>
            </Options1>
          </OptionsAndReason>
          <Botom>
            <SubmitCancel>
              <ButtonContained
                variant="contained"
                size="medium"
                color="primary"
                onClick={() => props.onHandleQuizAnswer()}
              >
                {' '}
                Next Question >{' '}
              </ButtonContained>
            </SubmitCancel>
          </Botom>
        </Q1>
        {false && (
          <Q2>
            <WhatIsYourPreferredL>
              {`What is your preferred language?`}
            </WhatIsYourPreferredL>
            <OptionsAndReason1>
              <Options2>
                <FormControl>
                  <RadioGroup
                    id={'preferred_language'}
                    name={'preferred_language'}
                    aria-label={'preferred_language'}
                    onChange={(e) =>
                      props.onRadioChange(e, {
                        question: 'preferred_language',
                        value: e.target.value,
                      })
                    }
                  >
                    <FormControlLabel4
                      control={
                        <Radio
                          value={'javascript'}
                          color="primary"
                          size="medium"
                        />
                      }
                      label={'Javascript'}
                    />
                    <FormControlLabel5
                      control={
                        <Radio
                          value={'typescript'}
                          color="primary"
                          size="medium"
                        />
                      }
                      label={'Typescript'}
                    />
                  </RadioGroup>
                </FormControl>
              </Options2>
            </OptionsAndReason1>
            <Botom1>
              <SubmitCancel1>
                <ButtonContained1
                  variant="contained"
                  size="medium"
                  color="primary"
                  onClick={() => props.onHandleQuizAnswer()}
                >
                  {' '}
                  Last Question >{' '}
                </ButtonContained1>
              </SubmitCancel1>
            </Botom1>
          </Q2>
        )}
        {false && (
          <Q3>
            <WhoAreYou>{`Who are you?`}</WhoAreYou>
            <OptionsAndReason2>
              <Options3>
                <FormControl>
                  <RadioGroup
                    id={'who_are_you'}
                    name={'who_are_you'}
                    aria-label={'who_are_you'}
                    onChange={(e) =>
                      props.onRadioChange(e, {
                        question: 'who_are_you',
                        value: e.target.value,
                      })
                    }
                  >
                    <FormControlLabel6
                      control={
                        <Radio
                          value={'startup'}
                          color="primary"
                          size="medium"
                        />
                      }
                      label={'Startup'}
                    />
                    <FormControlLabel7
                      control={
                        <Radio
                          value={'product_devteam'}
                          color="primary"
                          size="medium"
                        />
                      }
                      label={'Product Development team in a company'}
                    />
                    <FormControlLabel8
                      control={
                        <Radio
                          value={'dev_agency'}
                          color="primary"
                          size="medium"
                        />
                      }
                      label={'Agency building for my clients'}
                    />
                    <FormControlLabel9
                      control={
                        <Radio
                          value={'student_educator'}
                          color="primary"
                          size="medium"
                        />
                      }
                      label={'Student or Educator'}
                    />
                  </RadioGroup>
                </FormControl>
              </Options3>
            </OptionsAndReason2>
            <Botom2>
              <SubmitCancel2>
                <ButtonContained2
                  variant="contained"
                  size="medium"
                  color="primary"
                  onClick={() => props.onHandleQuizSubmit()}
                >
                  {' '}
                  Finish Setup >{' '}
                </ButtonContained2>
              </SubmitCancel2>
            </Botom2>
          </Q3>
        )}
      </WelcomeQuiz>
    </Questions1>
  );
}

export default Questions;
